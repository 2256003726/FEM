package com.wjp.fem.bean;

import java.util.ArrayList;
import java.util.List;

public class SpotExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    public SpotExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSpotIdIsNull() {
            addCriterion("spot_id is null");
            return (Criteria) this;
        }

        public Criteria andSpotIdIsNotNull() {
            addCriterion("spot_id is not null");
            return (Criteria) this;
        }

        public Criteria andSpotIdEqualTo(Integer value) {
            addCriterion("spot_id =", value, "spotId");
            return (Criteria) this;
        }

        public Criteria andSpotIdNotEqualTo(Integer value) {
            addCriterion("spot_id <>", value, "spotId");
            return (Criteria) this;
        }

        public Criteria andSpotIdGreaterThan(Integer value) {
            addCriterion("spot_id >", value, "spotId");
            return (Criteria) this;
        }

        public Criteria andSpotIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("spot_id >=", value, "spotId");
            return (Criteria) this;
        }

        public Criteria andSpotIdLessThan(Integer value) {
            addCriterion("spot_id <", value, "spotId");
            return (Criteria) this;
        }

        public Criteria andSpotIdLessThanOrEqualTo(Integer value) {
            addCriterion("spot_id <=", value, "spotId");
            return (Criteria) this;
        }

        public Criteria andSpotIdIn(List<Integer> values) {
            addCriterion("spot_id in", values, "spotId");
            return (Criteria) this;
        }

        public Criteria andSpotIdNotIn(List<Integer> values) {
            addCriterion("spot_id not in", values, "spotId");
            return (Criteria) this;
        }

        public Criteria andSpotIdBetween(Integer value1, Integer value2) {
            addCriterion("spot_id between", value1, value2, "spotId");
            return (Criteria) this;
        }

        public Criteria andSpotIdNotBetween(Integer value1, Integer value2) {
            addCriterion("spot_id not between", value1, value2, "spotId");
            return (Criteria) this;
        }

        public Criteria andSpotStateIsNull() {
            addCriterion("spot_state is null");
            return (Criteria) this;
        }

        public Criteria andSpotStateIsNotNull() {
            addCriterion("spot_state is not null");
            return (Criteria) this;
        }

        public Criteria andSpotStateEqualTo(String value) {
            addCriterion("spot_state =", value, "spotState");
            return (Criteria) this;
        }

        public Criteria andSpotStateNotEqualTo(String value) {
            addCriterion("spot_state <>", value, "spotState");
            return (Criteria) this;
        }

        public Criteria andSpotStateGreaterThan(String value) {
            addCriterion("spot_state >", value, "spotState");
            return (Criteria) this;
        }

        public Criteria andSpotStateGreaterThanOrEqualTo(String value) {
            addCriterion("spot_state >=", value, "spotState");
            return (Criteria) this;
        }

        public Criteria andSpotStateLessThan(String value) {
            addCriterion("spot_state <", value, "spotState");
            return (Criteria) this;
        }

        public Criteria andSpotStateLessThanOrEqualTo(String value) {
            addCriterion("spot_state <=", value, "spotState");
            return (Criteria) this;
        }

        public Criteria andSpotStateLike(String value) {
            addCriterion("spot_state like", value, "spotState");
            return (Criteria) this;
        }

        public Criteria andSpotStateNotLike(String value) {
            addCriterion("spot_state not like", value, "spotState");
            return (Criteria) this;
        }

        public Criteria andSpotStateIn(List<String> values) {
            addCriterion("spot_state in", values, "spotState");
            return (Criteria) this;
        }

        public Criteria andSpotStateNotIn(List<String> values) {
            addCriterion("spot_state not in", values, "spotState");
            return (Criteria) this;
        }

        public Criteria andSpotStateBetween(String value1, String value2) {
            addCriterion("spot_state between", value1, value2, "spotState");
            return (Criteria) this;
        }

        public Criteria andSpotStateNotBetween(String value1, String value2) {
            addCriterion("spot_state not between", value1, value2, "spotState");
            return (Criteria) this;
        }

        public Criteria andSpotCityIsNull() {
            addCriterion("spot_city is null");
            return (Criteria) this;
        }

        public Criteria andSpotCityIsNotNull() {
            addCriterion("spot_city is not null");
            return (Criteria) this;
        }

        public Criteria andSpotCityEqualTo(String value) {
            addCriterion("spot_city =", value, "spotCity");
            return (Criteria) this;
        }

        public Criteria andSpotCityNotEqualTo(String value) {
            addCriterion("spot_city <>", value, "spotCity");
            return (Criteria) this;
        }

        public Criteria andSpotCityGreaterThan(String value) {
            addCriterion("spot_city >", value, "spotCity");
            return (Criteria) this;
        }

        public Criteria andSpotCityGreaterThanOrEqualTo(String value) {
            addCriterion("spot_city >=", value, "spotCity");
            return (Criteria) this;
        }

        public Criteria andSpotCityLessThan(String value) {
            addCriterion("spot_city <", value, "spotCity");
            return (Criteria) this;
        }

        public Criteria andSpotCityLessThanOrEqualTo(String value) {
            addCriterion("spot_city <=", value, "spotCity");
            return (Criteria) this;
        }

        public Criteria andSpotCityLike(String value) {
            addCriterion("spot_city like", value, "spotCity");
            return (Criteria) this;
        }

        public Criteria andSpotCityNotLike(String value) {
            addCriterion("spot_city not like", value, "spotCity");
            return (Criteria) this;
        }

        public Criteria andSpotCityIn(List<String> values) {
            addCriterion("spot_city in", values, "spotCity");
            return (Criteria) this;
        }

        public Criteria andSpotCityNotIn(List<String> values) {
            addCriterion("spot_city not in", values, "spotCity");
            return (Criteria) this;
        }

        public Criteria andSpotCityBetween(String value1, String value2) {
            addCriterion("spot_city between", value1, value2, "spotCity");
            return (Criteria) this;
        }

        public Criteria andSpotCityNotBetween(String value1, String value2) {
            addCriterion("spot_city not between", value1, value2, "spotCity");
            return (Criteria) this;
        }

        public Criteria andSpotCountyIsNull() {
            addCriterion("spot_county is null");
            return (Criteria) this;
        }

        public Criteria andSpotCountyIsNotNull() {
            addCriterion("spot_county is not null");
            return (Criteria) this;
        }

        public Criteria andSpotCountyEqualTo(String value) {
            addCriterion("spot_county =", value, "spotCounty");
            return (Criteria) this;
        }

        public Criteria andSpotCountyNotEqualTo(String value) {
            addCriterion("spot_county <>", value, "spotCounty");
            return (Criteria) this;
        }

        public Criteria andSpotCountyGreaterThan(String value) {
            addCriterion("spot_county >", value, "spotCounty");
            return (Criteria) this;
        }

        public Criteria andSpotCountyGreaterThanOrEqualTo(String value) {
            addCriterion("spot_county >=", value, "spotCounty");
            return (Criteria) this;
        }

        public Criteria andSpotCountyLessThan(String value) {
            addCriterion("spot_county <", value, "spotCounty");
            return (Criteria) this;
        }

        public Criteria andSpotCountyLessThanOrEqualTo(String value) {
            addCriterion("spot_county <=", value, "spotCounty");
            return (Criteria) this;
        }

        public Criteria andSpotCountyLike(String value) {
            addCriterion("spot_county like", value, "spotCounty");
            return (Criteria) this;
        }

        public Criteria andSpotCountyNotLike(String value) {
            addCriterion("spot_county not like", value, "spotCounty");
            return (Criteria) this;
        }

        public Criteria andSpotCountyIn(List<String> values) {
            addCriterion("spot_county in", values, "spotCounty");
            return (Criteria) this;
        }

        public Criteria andSpotCountyNotIn(List<String> values) {
            addCriterion("spot_county not in", values, "spotCounty");
            return (Criteria) this;
        }

        public Criteria andSpotCountyBetween(String value1, String value2) {
            addCriterion("spot_county between", value1, value2, "spotCounty");
            return (Criteria) this;
        }

        public Criteria andSpotCountyNotBetween(String value1, String value2) {
            addCriterion("spot_county not between", value1, value2, "spotCounty");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryIsNull() {
            addCriterion("spot_category is null");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryIsNotNull() {
            addCriterion("spot_category is not null");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryEqualTo(String value) {
            addCriterion("spot_category =", value, "spotCategory");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryNotEqualTo(String value) {
            addCriterion("spot_category <>", value, "spotCategory");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryGreaterThan(String value) {
            addCriterion("spot_category >", value, "spotCategory");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryGreaterThanOrEqualTo(String value) {
            addCriterion("spot_category >=", value, "spotCategory");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryLessThan(String value) {
            addCriterion("spot_category <", value, "spotCategory");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryLessThanOrEqualTo(String value) {
            addCriterion("spot_category <=", value, "spotCategory");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryLike(String value) {
            addCriterion("spot_category like", value, "spotCategory");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryNotLike(String value) {
            addCriterion("spot_category not like", value, "spotCategory");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryIn(List<String> values) {
            addCriterion("spot_category in", values, "spotCategory");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryNotIn(List<String> values) {
            addCriterion("spot_category not in", values, "spotCategory");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryBetween(String value1, String value2) {
            addCriterion("spot_category between", value1, value2, "spotCategory");
            return (Criteria) this;
        }

        public Criteria andSpotCategoryNotBetween(String value1, String value2) {
            addCriterion("spot_category not between", value1, value2, "spotCategory");
            return (Criteria) this;
        }

        public Criteria andSpotNameIsNull() {
            addCriterion("spot_name is null");
            return (Criteria) this;
        }

        public Criteria andSpotNameIsNotNull() {
            addCriterion("spot_name is not null");
            return (Criteria) this;
        }

        public Criteria andSpotNameEqualTo(String value) {
            addCriterion("spot_name =", value, "spotName");
            return (Criteria) this;
        }

        public Criteria andSpotNameNotEqualTo(String value) {
            addCriterion("spot_name <>", value, "spotName");
            return (Criteria) this;
        }

        public Criteria andSpotNameGreaterThan(String value) {
            addCriterion("spot_name >", value, "spotName");
            return (Criteria) this;
        }

        public Criteria andSpotNameGreaterThanOrEqualTo(String value) {
            addCriterion("spot_name >=", value, "spotName");
            return (Criteria) this;
        }

        public Criteria andSpotNameLessThan(String value) {
            addCriterion("spot_name <", value, "spotName");
            return (Criteria) this;
        }

        public Criteria andSpotNameLessThanOrEqualTo(String value) {
            addCriterion("spot_name <=", value, "spotName");
            return (Criteria) this;
        }

        public Criteria andSpotNameLike(String value) {
            addCriterion("spot_name like", value, "spotName");
            return (Criteria) this;
        }

        public Criteria andSpotNameNotLike(String value) {
            addCriterion("spot_name not like", value, "spotName");
            return (Criteria) this;
        }

        public Criteria andSpotNameIn(List<String> values) {
            addCriterion("spot_name in", values, "spotName");
            return (Criteria) this;
        }

        public Criteria andSpotNameNotIn(List<String> values) {
            addCriterion("spot_name not in", values, "spotName");
            return (Criteria) this;
        }

        public Criteria andSpotNameBetween(String value1, String value2) {
            addCriterion("spot_name between", value1, value2, "spotName");
            return (Criteria) this;
        }

        public Criteria andSpotNameNotBetween(String value1, String value2) {
            addCriterion("spot_name not between", value1, value2, "spotName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fire_spot
     *
     * @mbg.generated do_not_delete_during_merge Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fire_spot
     *
     * @mbg.generated Fri Mar 20 13:13:37 GMT+08:00 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}